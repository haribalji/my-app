{"version":3,"sources":["components/About.js","components/Alert.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["About","mystyle","setmyStyle","useState","color","backgroundColor","btntext","setbtn","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","n","onClick","togglestyle","my-3","Alert","props","alert","class","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","aria-label","aria-current","Home","aria-disabled","placeholder","togglefunction","formhtml","App","setmode","setAlert","showAlert","message","setTimeout","Fragment","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3317c0be.chunk.js","sourcesContent":["import React ,{useState}from 'react'\r\n\r\nexport default function About() {\r\n  //  let mystyle={color:'white',\r\n  //   backgroundColor:'black'\r\n  //  };\r\n  //  now i am creating the usestate for dark mode enabling \r\n  const [mystyle,setmyStyle]=useState({color:'white',\r\n    backgroundColor:'black'\r\n   });\r\n   const [btntext,setbtn]=useState(\"Enable LIGHT mode\")\r\n\r\n   const togglestyle=()=>{\r\n      if(mystyle.color=='white'){\r\n        setmyStyle({color:'black',\r\n          backgroundColor:'white'\r\n         });\r\n         setbtn(\"Enable dark mode\");\r\n      }\r\n      else{\r\n        setmyStyle({color:'white',\r\n          backgroundColor:'black'\r\n         });\r\n         setbtn(\"Enable  LIGHT mode\");\r\n\r\n      }\r\n   }\r\n  return (\r\n    <div className='container' style={mystyle}>\r\n      <h1>abouts</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button style={mystyle} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n      <div style={mystyle}  className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button style={mystyle}className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div style={mystyle} className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <butto style={mystyle}n className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </butto>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div style={mystyle} className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container\">\r\n\r\n    <button type=\"button\" onClick={togglestyle}   className=\"btn btn-primary\" my-3>{btntext}</button>\r\n\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  }\r\n  return (\r\n    // props alert if exisit only it will return execute the remaining code\r\n    props.alert&&<div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n\r\n      <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n    {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.Home}</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">Link</a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n              Dropdown\r\n            </a>\r\n            <ul className=\"dropdown-menu\">\r\n              <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n              <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n              <li><hr className=\"dropdown-divider\"/></li>\r\n              <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n            </ul>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\" aria-disabled=\"true\">Disabled</a>\r\n          </li>\r\n        </ul>\r\n        <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n        <div className=\"form-check form-switch text-light\" >\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.togglefunction} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\"formhtml=\"flexSwitchCheckDefault\" >Enable white mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n    \r\n  </nav>   \r\n  \r\n  \r\n   </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={title:PropTypes.string.isRequired,\r\n            Home:PropTypes.string,\r\n  }\r\n\r\n\r\n//Home:PropTypes.string.isRequired,<--- by writing this text we are saying that  \r\n//  Navbar.defaultProps = {\r\n//   title: 'Stranger',\r\n//   Home: 'Stranger'\r\n// // if nothing is sent the component will be filled with this value\r\n// };","// import logo from './logo.svg';\nimport './App.css';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// var g=\"<h>ghil</h>\";\nimport React,{useState} from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setmode]=useState(\"light\")\n  const[alert,setAlert]=useState(null);\n\nconst showAlert=(message,type)=>{\n  // here i am passing the object to alert variable\n  setAlert({\n    msg:message,\n    type:type\n  })\n\n  // now making the alert to dissapear automatically\n  setTimeout(() => {\n    setAlert(null);\n  }, 1500);\n}\n\n  const togglefunction=()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor=\"black\";\n      showAlert(\"dark mode enabled\",\"success\")\n    }\n    else{\n      setmode(\"light\") ;\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"light mode enabled\",\"success\")\n\n    }\n  }\n  return (\n    <>\n   \n  {/* <Navbar title=\"NVP\" Home=\"gar\" mode={mode} togglefunction={togglefunction}/> \n  <Alert alert={ alert}/> */}\n\n\n\n  {/* <Navbar />  */}\n  {/* IT IS THE EXmple of the default props */}\n\n\n\n    \n\n{/* now adding the form */}\n\n{/* <div className=\"container\"> */}\n{/* <Navbar title=\"NVP\" Home=\"gar\" mode={mode} togglefunction={togglefunction}/>  */}\n  {/* <Alert alert={ alert}/> */}\n          {/* <About/> */}\n        \n          {/* <TextForm title=\"write something\" mode={mode}/> */}\n\n\n   {/* <About/> */}\n{/* </div> */}\n\n\n\n{/* <Router> */}\n<Navbar title=\"NVP\" Home=\"gar\" mode={mode} togglefunction={togglefunction}/> \n<Alert alert={ alert}/>\n   <About/>\n\n\n{/* exact keyword in react is used to track exact path */}\n      {/* <Routes> */}\n        {/* <Route  exact path=\"/TextForm\" element={<TextForm title=\"write something\" mode={mode}/>} /> */}\n        {/* <Route path=\"/about\" element={ <> */}\n          {/* <About/> </>} /> */}\n// \n{/*     \n      </Routes>\n </Router>\n */}\n\n\n\n\n  </>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}